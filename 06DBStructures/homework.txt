Chapter 6 Homework

All exercises here concern the music database. 

1. You’ve decided to store more information about artists and albums. Specifically,
for artists, you want to store the names of people who have worked with the artist
(for example, vocalists, guitarists, trumpeters, and drummers), when they began
working with the artist, and when they stopped working with the artist (if they
have done so).

For albums, you want to store the name of the album producer, when the album
was released, and where the album was recorded. Design tables or columns that
can store this information, and explain the advantages and disadvantages of your
design. Choose the column types you need, explaining the advantages and disad-
vantages of your choices.

ANSWER:
CREATE TABLE partner(
partner_id SMALLINT(5) NOT NULL DEFAULT 0,
partner_name CHAR(128) DEFAULT NULL,
artist_id SMALLINT(5) NOT NULL DEFAULT 0,
start_date DATE DEFAULT NULL,
end_date DATE DEFAULT NULL,
PRIMARY KEY (artist_id,partner_id)
);
partner_id is SMALLINT type because it’s a numeric identifier, allows us to have around 65,000 artists; we’ve limited its display width to 5 characters.
partner_name CHAR so that each row has an fixed, predictable size; this allows MySQL to better optimize; 
Disadvantages is it is fixed so if the partner name is shorter than 128, more spaces are spared.
start_date and end_date is DATE because I assume only date is required, no need to record the detail time. Disadvantage is if we need the specific time, there'll be a problem.

CREATE TABLE producer(
producer_id SMALLINT(5) NOT NULL DEFAULT 0,
producer_name CHAR(128) DEFAULT NULL,
album_id SMALLINT(5) NOT NULL DEFAULT 0,
release_date DATE DEFAULT NULL,
record_place VARCHAR(128) DEFAULT NULL,
PRIMARY KEY (producer_id,album_id) );

I chose record_place VARCHAR(128) because recording place may be long characters. If only place needs little characters, it is efficient. 

2. There are five types for storing temporal data: DATETIME, DATE, TIME, YEAR, and
TIMESTAMP. Explain what each is used for, and give an example of a situation in
which you would choose to use it. Note that http://palominodb.com/blog/2011/05/23/datetime-vs-timestamp
has some useful information too.
ANSWER:
a. DATETIME:
storing date and time combinations without the automatic-update feature of TIMESTAMP
b. DATE
Stores and displays a date in the format YYYY-MM-DD for the range 1000-01-01 to 9999-12-31. dash and 4 digit format is recommended YYYY-MM-DD or YY-MM-DD.
From MySQL 5.0.2, The zero date 0000-00-00  is stored when you insert an invalid
c. TIME
Stores a time in the format HHH:MM:SS for the range -838:59:59 to 838:59:59. up to 34 days, 22 hours, 59 minutes, and 59 seconds to be computed and stored
Format:DD HH:MM:SS, HH:MM:SS, DD HH:MM, HH:MM, DD HH, or SS .The zero time 00:00:00 can be used to represent an unknown or dummy
value
d. YEAR 
YEAR for storing only year values
e. TIMESTAMP
Stores and displays a date and time pair in the format YYYY-MM-DD HH:MM:SS for the range 1970-01-01 00:00:00 to sometime in 2037


3. You’ve decided to use the AUTO_INCREMENT feature. List the three requirements that
must be met by the column you’re applying it to.
ANSWER:
to create a unique identifier for a row without running a SELECT query. NOT NULL is required for AUTO_INCREMENT columns
The AUTO_INCREMENT feature has the following requirements:
• The column it is used on must be indexed.
• The column that is it used on cannot have a DEFAULT value.
• There can be only one AUTO_INCREMENT column per table.

4. Why can only one column in a table have the AUTO_INCREMENT feature?
ANSWER:
Because we need uniquiness in a table. I've seen this answer from http://dba.stackexchange.com/questions/3467/mysql-why-is-auto-increment-limited-to-just-primary-keys
"Having multiple auto_increment columns in the same table seems even odder. The two columns would have the same data-- they're being generated by the same algorithm and being populated at the same time after all"
I am a bit confused about this line.
" When you’re using the default MyISAM table type, you can use the AUTO_INCREMENT feature on keys that comprise multiple columns." 
According to this line, if i use MyISAM type, i can use AUTO_INCREMENT in many tables. ???
Is it true that other databases (eg,Oracle) accept AUTO_INCREMENT in more than 1 column?

5. Using the monitor, create a table with the following statement:
mysql> CREATE TABLE exercise (field1 INT(3));
Using the ALTER TABLE statement, make field1 the primary key, carrying out any
additional steps you need to make this possible. Add a second column, field2, of
type CHAR(64) with a DEFAULT 5 clause. Create an index on a prefix of 10 characters
from field2.

ANSWER:
CREATE TABLE exercise (field1 INT(3));
ALTER TABLE exercise ADD PRIMARY KEY (field1)
ALTER TABLE exercise ADD field2 CHAR(64) default '5';
ALTER TABLE exercise ADD INDEX field2 (field2(10));